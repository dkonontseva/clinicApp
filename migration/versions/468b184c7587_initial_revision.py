"""Initial revision

Revision ID: 468b184c7587
Revises: 
Create Date: 2025-02-15 12:56:58.446166

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '468b184c7587'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses',
    sa.Column('_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('street', sa.String(), nullable=False),
    sa.Column('house_number', sa.String(), nullable=False),
    sa.Column('flat_number', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('departments',
    sa.Column('_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('department_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('doctor_leaves',
    sa.Column('_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('from_date', sa.Date(), nullable=False),
    sa.Column('to_date', sa.Date(), nullable=False),
    sa.Column('leave_type', sa.String(), nullable=False),
    sa.Column('reason', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('education',
    sa.Column('_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('university', sa.String(), nullable=False),
    sa.Column('faculty', sa.String(), nullable=False),
    sa.Column('speciality', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('services',
    sa.Column('_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('service', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('shifts',
    sa.Column('_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('users',
    sa.Column('_id', sa.Integer(), nullable=False),
    sa.Column('login', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('second_name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('gender', sa.String(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('_id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('chat_messages',
    sa.Column('_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('timestapm', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users._id'], ),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('doctors',
    sa.Column('_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['addresses._id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments._id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users._id'], ),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('patients',
    sa.Column('_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('b_date', sa.Date(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['addresses._id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users._id'], ),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('medical_cards',
    sa.Column('_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('complaints', sa.String(), nullable=False),
    sa.Column('wellness_check', sa.String(), nullable=False),
    sa.Column('diagnosis', sa.String(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors._id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients._id'], ),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('schedules',
    sa.Column('_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('day_of_week', sa.String(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.Column('shift_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors._id'], ),
    sa.ForeignKeyConstraint(['shift_id'], ['shifts._id'], ),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('talons',
    sa.Column('_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('time', sa.Time(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('purpose', sa.String(), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors._id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients._id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services._id'], ),
    sa.PrimaryKeyConstraint('_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('talons')
    op.drop_table('schedules')
    op.drop_table('medical_cards')
    op.drop_table('patients')
    op.drop_table('doctors')
    op.drop_table('chat_messages')
    op.drop_table('users')
    op.drop_table('shifts')
    op.drop_table('services')
    op.drop_table('roles')
    op.drop_table('education')
    op.drop_table('doctor_leaves')
    op.drop_table('departments')
    op.drop_table('addresses')
    # ### end Alembic commands ###
